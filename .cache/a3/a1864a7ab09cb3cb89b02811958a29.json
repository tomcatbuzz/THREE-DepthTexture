{"id":"js/shader/fragment.glsl","dependencies":[{"name":"C:\\Apache24\\htdocs\\THREE-DepthTexture\\package.json","includedInParent":true,"mtime":1610650010633}],"generated":{"js":"module.exports = \"#define GLSLIFY 1\\n#include <packing>\\nuniform float time;\\nuniform float progress;\\nuniform sampler2D depthInfo;\\nuniform vec4 resolution;\\nvarying float vDepth;\\nvarying vec2 vUv;\\nvarying vec2 vUv1;\\nvarying vec3 vPosition;\\nuniform float cameraNear;\\nuniform float cameraFar;\\nfloat PI = 3.141592653589793238;\\n\\nfloat readDepth( sampler2D depthSampler, vec2 coord ) {\\n\\tfloat fragCoordZ = texture2D( depthSampler, coord ).x;\\n\\tfloat viewZ = perspectiveDepthToViewZ( fragCoordZ, cameraNear, cameraFar );\\n\\treturn viewZToOrthographicDepth( viewZ, cameraNear, cameraFar );\\n}\\nvoid main()\\t{\\n\\t// gl_FragColor = vec4(vUv,0.0,1.);\\n\\n\\tfloat depth = readDepth( depthInfo, vUv1 );\\n\\n\\tfloat tomix = smoothstep(0.2, 1., vDepth);\\n\\n\\tgl_FragColor.rgb = mix(vec3(0.495, 0.165, 0.234),2.*vec3(0.000, 0.001, 0.242),tomix);\\n\\tgl_FragColor.a = 1.0;\\n}\";"},"sourceMaps":{"js":{"mappings":[{"name":"module","generated":{"line":1,"column":0},"source":"js/shader/fragment.glsl","original":{"line":1,"column":0}},{"generated":{"line":1,"column":6},"source":"js/shader/fragment.glsl","original":{"line":1,"column":6}},{"name":"exports","generated":{"line":1,"column":7},"source":"js/shader/fragment.glsl","original":{"line":1,"column":7}},{"generated":{"line":1,"column":14},"source":"js/shader/fragment.glsl","original":{"line":1,"column":0}},{"generated":{"line":1,"column":17},"source":"js/shader/fragment.glsl","original":{"line":1,"column":15}},{"generated":{"line":1,"column":870},"source":"js/shader/fragment.glsl","original":{"line":1,"column":0}}],"sources":{"js/shader/fragment.glsl":"module.exports=\"#define GLSLIFY 1\\n#include <packing>\\nuniform float time;\\nuniform float progress;\\nuniform sampler2D depthInfo;\\nuniform vec4 resolution;\\nvarying float vDepth;\\nvarying vec2 vUv;\\nvarying vec2 vUv1;\\nvarying vec3 vPosition;\\nuniform float cameraNear;\\nuniform float cameraFar;\\nfloat PI = 3.141592653589793238;\\n\\nfloat readDepth( sampler2D depthSampler, vec2 coord ) {\\n\\tfloat fragCoordZ = texture2D( depthSampler, coord ).x;\\n\\tfloat viewZ = perspectiveDepthToViewZ( fragCoordZ, cameraNear, cameraFar );\\n\\treturn viewZToOrthographicDepth( viewZ, cameraNear, cameraFar );\\n}\\nvoid main()\\t{\\n\\t// gl_FragColor = vec4(vUv,0.0,1.);\\n\\n\\tfloat depth = readDepth( depthInfo, vUv1 );\\n\\n\\tfloat tomix = smoothstep(0.2, 1., vDepth);\\n\\n\\tgl_FragColor.rgb = mix(vec3(0.495, 0.165, 0.234),2.*vec3(0.000, 0.001, 0.242),tomix);\\n\\tgl_FragColor.a = 1.0;\\n}\";"},"lineCount":null}},"error":null,"hash":"5cc642690f6a0025ed4240d47444f60f","cacheData":{"env":{}}}